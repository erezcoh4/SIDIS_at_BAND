#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# continously take data and print the rate every few seconds
# last edit Jan-26, 2023 (EOC)
#
# execute example:
#
# ./macros/read_beam_charge --Skimming=RGA_Free_proton --DataPath=nSidis --Nruns=1 --fdebug=2
#
import sys, os, linecache
import argparse

parser = argparse.ArgumentParser(description='SIDIS skimming of multiple runs')
parser.add_argument("--Nruns",        type=int, default=-1,
                    required=False, help="number of runs to process ('-1' for all runs)")
parser.add_argument("--FirstRun",     type=int, default=0,
                    required=False, help="first run to start from")
parser.add_argument("--fdebug",       type=int, default=1,
                    required=False, help="verbosity")
parser.add_argument("--no-email",   dest="no_email",
                    default=False,  required=False,
                    action='store_true', help="do not send email")
parser.add_argument("--Skimming",     type=str, default="SIDIS_skimming",
                    required=False, help="SIDIS_skimming, RGA_Free_proton")
parser.add_argument("--DataPath",     type=str, default="sidisdvcs",
                    required=False, help="inc, sidisdvcs, nSidis")

                                

args = parser.parse_args()

Nruns         = args.Nruns
fdebug        = args.fdebug
FirstRun      = args.FirstRun
Skimming      = args.Skimming
DataPath      = args.DataPath

if Skimming == "SIDIS_skimming":
    runs_filename = "macros/runlists/good_runs_10-2-final.txt"
    
elif Skimming == "RGA_Free_proton":
    runs_filename = "macros/runlists/rga_data/rga_nsidis_runs_10-6.txt"

if DataPath=="nsidis": DataPath="nSidis"

# Using readlines()
runs_file = open(runs_filename, 'r')
run_fileLines = runs_file.readlines()
if Nruns<0: Nruns = len(run_fileLines)
if fdebug>1:#{
    print('good runs to process:')
    for line in run_fileLines[FirstRun:]:#{
        print(int(line.strip()), end =" ")
    #}
    print('')
    print('processing %d runs, starting from run %d'%(Nruns-FirstRun,FirstRun))
#}

runIdx = 0
for line in run_fileLines[FirstRun:]:#{
    runIdx += 1
    run = int(line.strip())
    commandline = ("clas12root -l -q 'ReadBeamCharge.C+(%d,%d,\"%s\",\"%s\")'"%
                    (run,fdebug,Skimming,DataPath))
    print('')
    print("processing run %d/%d"%(runIdx,Nruns))
    print('')
    print(commandline)
    print('')
    
    os.system( commandline )
    if (runIdx >= Nruns): break;
#}

print('')
print('done.')
print('')
if args.no_email==False:#{
    mailtitle = 'Done processing read_beam_charge on ifarm'
    mailbody  = ''
    emailstr = ('echo %s | mail -s "%s" cohen.erez7@gmail.com'%(mailbody,mailtitle) )
    os.system(emailstr)
#}
