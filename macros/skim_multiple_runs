#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# continously take data and print the rate every few seconds
# last edit Aug-21, 2021 (EOC)
#
import sys, os, linecache
import argparse

parser = argparse.ArgumentParser(description='Acquire data for TDC calibration')
parser.add_argument("--Nruns",      type=int, default=1,    required=False, help="number of runs to process")
parser.add_argument("--NeventsMax", type=int, default=-1,   required=False, help="maximal number of events to process")
args = parser.parse_args()

Nruns         = args.Nruns
NeventsMax    = args.NeventsMax
runs_filename = "macros/runlists/good_runs_10-2.txt"

# Using readlines()
runs_file = open(runs_filename, 'r')
run_fileLines = runs_file.readlines()
print('good runs:')
print(run_fileLines)
print('processing %d runs'%Nruns)

runIdx = 0
for line in run_fileLines:
    runIdx += 1
    # print("Line{}: {}".format(runIdx, line.strip()))
    run = int(line.strip())
    commandline = "processing run %d/%d clas12root -q 'SIDISc12rSkimmer.C+(%d,%d)'"%(runIdx,Nruns, run,NeventsMax)
    print(commandline)
    os.system( "clas12root -q 'SIDISc12rSkimmer.C+(%d,%d)'"%(run,NeventsMax))
    if runIdx >= Nruns: break;

print(' ')
print('done.')
print(' ')
